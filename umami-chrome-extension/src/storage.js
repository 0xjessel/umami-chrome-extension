import{DEFAULT_POLLING_INTERVAL as e}from"./constants.js";export class StorageManager{static DEFAULT_CONFIG={pollingInterval:e,showActiveUsers:!0,showPageViews:!0,showVisitors:!0,showVisits:!0,showBounces:!1,showTotalTime:!1,badgeMetric:"visits",serverType:"self-hosted",displayName:"",cachedMetrics:{activeUsers:null,pageViews:{value:null,trend:null},visitors:{value:null,trend:null},visits:{value:null,trend:null},bounces:{value:null,trend:null},totalTime:{value:null,trend:null},lastUpdated:null}};static async getConfig(){const e=await chrome.storage.sync.get(null);return{...this.DEFAULT_CONFIG,...e}}static async updateConfig(e){return await chrome.storage.sync.set(e),this.getConfig()}static async setCredentials({baseUrl:e,token:s,websiteId:t,username:a,password:r}){if(!(e&&s&&t&&a&&r))throw new Error("Missing required credentials");const i=new URL(e.trim()).hostname.replace(/^www\./,"");await chrome.storage.sync.set({serverType:"self-hosted",baseUrl:e.trim(),token:s.trim(),websiteId:t.trim(),username:a.trim(),password:r.trim(),displayName:i})}static async clearCredentials(){await chrome.storage.sync.remove(["baseUrl","token","websiteId","username","password"])}static async hasCredentials(){const{baseUrl:e,token:s,websiteId:t,username:a,password:r}=await chrome.storage.sync.get(["baseUrl","token","websiteId","username","password"]);return Boolean(e&&s&&t&&a&&r)}static async updatePreferences({showActiveUsers:s,showPageViews:t,showVisitors:a,showVisits:r,showBounces:i,showTotalTime:n,badgeMetric:o,pollingInterval:l}){await chrome.storage.sync.set({showActiveUsers:s,showPageViews:t,showVisitors:a,showVisits:r,showBounces:i,showTotalTime:n,badgeMetric:o,pollingInterval:l??e})}static async updateCachedMetrics(e){const s={...e,lastUpdated:(new Date).toISOString()};return await chrome.storage.sync.set({cachedMetrics:s}),s}}